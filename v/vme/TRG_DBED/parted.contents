class TrgInput:
  def __init__(self, name):
  def check(self, line):
  def prt(self):
class TrgInpDet:
  def __init__(self, name):
  def findInput(self, name):
  def addInput(self, inp):
  def getinputnames(self):
  def tidprt(self):
  def makeVirtL0f(self):
class TrgDescriptor:
  def __init__(self, name, inps=[]):
  def check_l0f(self, inp):
  def checkForPcfg(self, inp):
  def check2or34funs(self, l0funs, lut, inp):
  def show(self,master):
  def trdprt(self):
  def getInputs(self):
  def getInpDets(self):
class TrgPF:
  def __init__(self, name, vals):
class TrgSHR:
  def __init__(self, name, helptext=None):
  def show(self,master):
  def hide(self):
  def updt(self, event=None):
  def getValue(self):
  def setValue(self, newvaluetxt):
  def getValueHexa(self):
  def save(self, outfile):
class TrgSHR_BCM(TrgSHR):
  def __init__(self, name, helptext=None):
  def show(self,master):
  def setValue(self, newbcm):
  def updt(self, tkobj=None, event=None):
  def getDefinition(self):
  def getName(self):
  def isPFDefined(self,level):
  def prtBits(self):
  def getBits(self):
  def __init__(self):
  def initTDS(self,reload=None):
  def findInput(self, nameintds):
  def findTrgInpDet(self, name):
  def findPF(self, name):
  def findTD(self, name):
  def findLTU(self, name):
  def getltunames(self):
  def getInpDets(self, inpname):
  def doTDSbut(self, master, cmd, trdeactive):
  def load_PFs(self):
  def load_BCMs(self):
  def findBCMPFname(self,bcmname, bcmpf):
class TrgClass:
  def __init__(self, clstring, mycluster, clusname4clsname):
  def get_clsnamepart1(self, k):
  def get_clsnamepart2(self, k):
  def prtClass(self):
  def updateClassName(self, cluspart,composeName="yes"):
  def buildname(self,name_part=None):
  def updateClassName1(self):
  def setCluster(self, mycluster):
  def getrcfgdesname(self):
  def getTXTpfs(self):
  def getPFs(self):
  def getTXTbcrnd(self, text=None):
  def getTXTbcms(self):
  def getBCMASKs(self):
  def getTXTcls(self):
  def hide(self):
  def showClass_BCMPF(self, bcmorpf):
  def showClass(self):
  def applyClassFilter(self,filter):
  def cgupdate(self, event=None):
  def l0prcmd(self, event=None):
  def getclsname(self, clustpart='yes'):
  def clsnamecmd(self, event=None):
  def modadi(self, adibutinst, ixoi):
  def rarecmd(self):
  def modpfs(self, mli, ix):
  def modtds(self, mywxinstance, ix):
  def modButton(self):
  def hideclass(self,event):
class TrgCluster:
  def __init__(self, clusname, partition=None, cls=None, outdets=None):
  def getCLS(self):
  def prt(self):
  def hide(self):
  def doTDSbuttons(self):
  def getFreeFrame(self):
  def doCLSbutton(self, ixcls):
  def refreshClassNames(self):
  def doTDShead(self):
  def refreshTDShead(self):
  def refreshTDSheadLabel(self):
  def doTDSheadLists(self):
  def show(self,master):
  def modcls(self, cls):
  def modtdsl(self, mwl, modix):
  def modoutl(self):
  def delete(self, event=None):
  def save(self, outfile):
  def getltunames(self):
  def getinpdets(self):
  def dobits(self, bitlist, ltl):
  def setActiveCluster(self, event=None):
  def activeCluster(self,event=None):
  def deactiveCluster(self,event=None):
class TrgPartition:
  def __init__(self, relpname, strict=None):
  def donewtd(self):
  def show(self,master,name=None):
  def hide(self):
  def destroy(self):
  def prt(self):
  def prtInputDetectors(self,hexs=None):
  def getRR(self, minst, ix=0):   # get Required Resources
  def save(self, partname):
  def checkPartition(self):
  def l0fUpdate(self, tl0funs, l0inps):
  def findfirst(self, phclasses=None):
  def savepcfg(self,wdir=CFGDIR,name=None):
  def prtinputs(self, dbgfname=None):
  def savercfg(self, line=""):
  def prtinput1(self, inp, of=None):
  def allocShared(self, pl0funs, lf34=None):
  def prt_FIXrc(self, rc, cltds, symbols, shrname):
  def loadfile(self, inf):
  def showShared(self, minst, ix):
  def hideShared(self, event=None):
  def addCluster(self, minst,ix ):
  def findCluster(self, clu):
  def findClusterName(self, cluname):
  def rmCluster(self, clu):
  def renActiveCluster(self, minst, ix):
  def clusterRenamed(self, event=None):
  def delActiveCluster(self, minst, ix):
  def setActiveCluster(self, actclu):
  def inventClusterName(self):
  def sdgGroups(self, minst,ix):
  def getn(x):return string.split(x,'.')[0]
class TrgLoadSave:
  def __init__(self, master, partname):
  def doNames(self):
  def refreshNames(self, sf1):
  def doSaveEntry(self):
  def cancelPart(self, minst=None, ix=None):
  def quitPart(self, minst, ix):
  def savePart(self, minst, ix):
  def savePartAs(self, minst, ix):
  def savePartAs2(self, event=None):
  def loadPartition(self,partname=None):
  def showDescriptor(self,menuinstance, ix):
  def changeShown(self,menuinstance, ix):
  def checkall(self):
