self.baseAddr="0xA00000"
self.spaceLength="0xCB"
self.vmeregs=[('CSR1', '0x80', '0x04000000'), ('CSR2', '0x82', '0x04000000'), ('BOARDreset', '0x84', '0x04000000'), ('L1Agen', '0x86', '0x04000000'), ('EOCreset', '0x8c', '0x04000000'), ('IDel0', '0x92', '0x04000000'), ('IDur0', '0x94', '0x04000000'), ('EOcnt1', '0x88', '0x04000000'), ('EOcnt2', '0x8a', '0x04000000'), ('BCLFACttcrxadr', '0xC0', '0x04000000'), ('BCLFACdata', '0xC2', '0x04000000'), ('BCDBG0', '0xb0', ''), ('BCDBG1', '0xb4', ''), ('BCDBG2', '0xb8', ''), ('BCDBG3', '0xbc', '')]
self.funcs=[['primitives', 'print CSR1 ', 'void', 'pcsr1', []], ['primitives', '', 'int', 'setcsr1', [['EvOr', 'w16', ''], ['Freq', 'w16', ''], ['L1AFreset', 'w16', ''], ['ExtOrbit0', 'w16', ''], ['TrigSrc', 'w16', '']]], ['primitives', 'settrig(int trigSource, int frequency): set trigger Source\012and trigger frequency for random trigger.\012trigSource: \0120=L1A0, 1=L1A1, 2=L1A2, 3=L1A3,\0124=VME, 5=random trigger\012frequency (valid for random trigger):\0120=1Hz, 1=100Hz, 2=1kHz, 3=5kHz, 4=10kHz, \0125=25kHz, 6=50kHz, 7=100kHz\012', 'int', 'settrig', [['trigSource', 'int', ''], ['frequency', 'int', '']]], [None, ' \012Examine/set CSR1 register (Input selection and timing)\012', 'GUI', 'InpSelTiming', []], ['primitives', 'Set counting (events/orbits) and clear event/orbit counter:\012setcount(0) - count events\012setcount(1) - count orbits\012', 'int', 'setcount', [['orbits', 'int', '']]], ['primitives', 'send L1 trigger  ', 'int', 'sendL1', [['cnt', 'int', '']]], ['primitives', 'send L1 trigger and L1 message  ', 'int', 'sendL1M', [['wo1', 'w32', ''], ['wo2', 'w32', ''], ['wo3', 'w32', ''], ['wo4', 'w32', ''], ['wo5', 'w32', '']]], ['primitives', 'send L2 message ', 'int', 'sendL2M', [['wo1', 'w32', ''], ['wo2', 'w32', ''], ['wo3', 'w32', ''], ['wo4', 'w32', ''], ['wo5', 'w32', ''], ['wo6', 'w32', ''], ['wo7', 'w32', ''], ['wo8', 'w32', '']]], ['primitives', 'sendtrigger(int cnt) \012  send (L1, last L1 message, last L2 message) in loop (cnt times)\012  sendL1M(), sendL2M() should be called before \012   to prepare L1,L2 messages\012cnt: 0-> endless loop\012    >0-> send cnt L1,L2 sequences \012', 'void', 'sendtrigger', [['cnt', 'int', '']]], [None, '  \012send: L1 & L1message or\012      L2message or\012      L1, L1message, L2message\012', 'GUI', 'sendL1L2', []], ['primitives', 'sendcontrol(int E, w8 subaddr, w8 data, cycles)\012send broadcast data\012E:\0120 access TTCrx internal registers\0121 external access\012subaddr,data: data to be sent\012cycles: # of repetitions\012', 'int', 'sendcontrol', [['E', 'int', ''], ['subaddr', 'w8', ''], ['data', 'w8', ''], ['cycles', 'int', '']]], ['primitives', 'write many times:\012  vmew32(BCDBG0, 0x7a800000);\012  vmew32(BCDBG1, 0x5d000000);\012  vmew32(BCDBG2, 0x47000000);\012', 'void', 'senddata', [['cycles', 'int', '']]]]
