self.baseAddr="0x800000"
self.spaceLength="0xCB"
self.vmeregs=[('CSR1', '0x80', '0x04000000'), ('CSR2', '0x82', '0x04000000'), ('BOARDreset', '0x84', '0x04000000'), ('L1Agen', '0x86', '0x04000000'), ('EOCreset', '0x8c', '0x04000000'), ('BGo0mode', '0x90', '0x04000000'), ('BGo1mode', '0x98', '0x04000000'), ('BGo2mode', '0xa0', '0x04000000'), ('BGo3mode', '0xa8', '0x04000000'), ('IDel0', '0x92', '0x04000000'), ('IDur0', '0x94', '0x04000000'), ('IDel1', '0x9a', '0x04000000'), ('IDur1', '0x9c', '0x04000000'), ('IDel2', '0xa2', '0x04000000'), ('IDur2', '0xa4', '0x04000000'), ('IDel3', '0xaa', '0x04000000'), ('IDur3', '0xac', '0x04000000'), ('EOcnt1', '0x88', '0x04000000'), ('EOcnt2', '0x8a', '0x04000000'), ('BCLFACttcrxadr', '0xC0', '0x04000000'), ('BCLFACdata', '0xC2', '0x04000000'), ('BCSFACdata', '0xC4', '0x04000000'), ('BCDBG0', '0xb0', ''), ('BCDBG1', '0xb4', ''), ('BCDBG2', '0xb8', ''), ('BCDBG3', '0xbc', '')]
self.hiddenfuncs=""
self.funcs=[['primitives', 'print CSR1 ', 'void', 'pcsr1', []], ['primitives', '', 'void', 'setcsr1', [['EvOr', 'w16', ''], ['Freq', 'w16', ''], ['L1AFreset', 'w16', ''], ['ExtOrbit0', 'w16', ''], ['TrigSrc', 'w16', '']]], ['primitives', 'get event/orbit counter content\n', 'int', 'getEOcnt', []], ['primitives', 'settrig(int trigSource, int frequency): set trigger Source\nand trigger frequency for random trigger.\ntrigSource: \n0=L1A0, 1=L1A1, 2=L1A2, 3=L1A3,\n4=VME, 5=random trigger\nfrequency (valid for random trigger):\n0=1Hz, 1=100Hz, 2=1kHz, 3=5kHz, 4=10kHz, \n5=25kHz, 6=50kHz, 7=100kHz\n', 'void', 'settrig', [['trigSource', 'int', ''], ['frequency', 'int', '']]], [None, 'Examine/set CSR1 register (Input selection and timing)\n', 'GUI', 'InpSelTiming', [], 'InpSelTiming'], ['primitives', 'Set counting (events/orbits) and clear event/orbit counter:\nsetcount(0) - count events\nsetcount(1) - count orbits\n', 'void', 'setcount', [['orbits', 'int', '']]], ['primitives', 'send 1 or more L1 triggers ', 'void', 'sendL1', [['cnt', 'int', '']]], ['primitives', 'send L1 trigger and L1 message\nwo1-wo5: 5 12-bits word comprising the L1message ', 'void', 'sendL1M', [['wo1', 'w32', ''], ['wo2', 'w32', ''], ['wo3', 'w32', ''], ['wo4', 'w32', ''], ['wo5', 'w32', '']]], ['primitives', 'send L2 message. wo1-wo8: 8 12-bits words comprising the L2 message ', 'void', 'sendL2M', [['wo1', 'w32', ''], ['wo2', 'w32', ''], ['wo3', 'w32', ''], ['wo4', 'w32', ''], ['wo5', 'w32', ''], ['wo6', 'w32', ''], ['wo7', 'w32', ''], ['wo8', 'w32', '']]], ['primitives', 'sendtrigger(int cnt) \n  send (L1, last L1 message, last L2 message) in loop (cnt times)\n  sendL1M(), sendL2M() should be called before \n   to prepare L1,L2 messages\ncnt: 0-> endless loop\n    >0-> send cnt L1,L2 sequences \n', 'void', 'sendtrigger', [['cnt', 'int', '']]], [None, 'send: L1 & L1message or\n      L2message or\n      L1, L1message, L2message\n', 'GUI', 'sendL1L2', [], 'sendL1L2'], ['primitives', 'Send broadcast command (short async cycles)\ndata:\n1 bunch counter reset\n2 event counter reset\n3 both counters reset\n', 'void', 'sendBroadcast', [['data', 'w8', '']]], ['primitives', 'sendcontrol(int E, w8 subaddr, w8 data, cycles)\nsend broadcast data\nE:\n0 access TTCrx internal registers\n1 external access\nsubaddr,data: data to be sent\ncycles: # of repetitions\n', 'void', 'sendcontrol', [['E', 'int', ''], ['subaddr', 'w8', ''], ['data', 'w8', ''], ['cycles', 'int', '']]], ['primitives', "write 'data (16bits)' through Bgo2 'cycles' times \n", 'void', 'senddata', [['cycles', 'int', ''], ['data', 'w16', '']]], [None, 'Used for test of TTCvi -Dout strob doubled on TTCrx\n(instad of 1 word in B channel we have seen 2 words for fifos 0 and 2\n26.10.2006. After replugging the TTCvi board in its VME slot this fault\ndisappeared). This happened with TTCvi:\nCERNID:80030 Serial number:5054543 Board revision:20020415\n(used as HMPID in DAQ ref. setup).\nAll fifos should be set as follows:\nvmew16(CSR2,0xff00);\nbgoinit(fifoN,    0, 0, 0x03, 0xffffffff); \n\nn       -# of loops\ndat     -data sent in 1 loop\nmicsecs -wait micsecs between vmew32(...\nfifo    - 0,1,2,3\n', 'void', 'send1w', [['n', 'int', ''], ['dat', 'w32', ''], ['micsecs', 'int', ''], ['fifo', 'int', '']]], ['TTCconfig', 'Print serial number of TTCvi board\n', 'void', 'printsernumber', []], ['TTCconfig', 'the TTCvi board software reset\n', 'void', 'reset', []], ['TTCconfig', 'bcdelay: delay in bunch crossings for B-Go1 channel (prepulse)\n', 'void', 'ppdelay', [['bcdelay', 'w16', '']]], ['TTCconfig', 'This routine should be removed and the one in ltulib/ltuinit.c to be used!\nbgc      -Bgo channel (0..3)\ndel, dur -delay, duration for this channel\nmode     - mode of the channel\ndata     -data to be written into B Channel Data FIFO\nModified registers:\nchan delayreg durreg modereg B-go(data)\n0    0x92     0x94   0x90    0xb0      Orbit (Bgo driven)\n1    0x9a     0x9c   0x98    0xb4      PP (Bgo driven)\n2    0xa2     0xa4   0xa0    0xb8      L1/L2 data (FIFO driven)\n', 'void', 'bgoinit', [['bgc', 'int', ''], ['del', 'w16', ''], ['dur', 'w16', ''], ['mode', 'w16', ''], ['data', 'w32', '']]], ['TTCconfig', '', 'void', 'bgodump', [['bgc', 'int', '']]], ['TTCconfig', 'This routine, when called from ltu.exe, is to be replaced be \ncall to ttcInit(0) -see ltulib/ltuinit.c\nInitialize TTCvi, TTCrx. \nHas to be called always after power up of TTCvi or TTCrx.\nIt is called automatically after the start of this software (ttcvi.exe)\n', 'void', 'ttcinit', []], ['TTCconfig', 'reads current settings on TTCvi board\n', 'void', 'ttcdump', []]]
