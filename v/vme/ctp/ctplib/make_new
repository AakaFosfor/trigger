include $(VMEBDIR)/com_defs.make
include $(VMEBDIR)/daq_defs.make
#MYSQLCFLAGS=`mysql_config --cflags`
MYSQLCFLAGS=-I/usr/include/mysql
#CFLAGS= -Wall -g -DCERNLAB_SETUP     or CAVERN_SETUP
ifeq ($(VMESITE), ALICE)
WHICHSETUP = CAVERN_SETUP
else
WHICHSETUP = CERNLAB_SETUP
endif
CFLAGS= $(COMMONCFLAGS) -D$(WHICHSETUP) -D$(VMEDRIVER) \
 -I$(VMEBLIB)/.. -I$(VMECFDIR)/ctp -I$(VMECFDIR)/ctp_proxy 

include $(VMEBDIR)/sc.make

S_OBJSCOM = fileManip.o
ifdef SERVER_LINK
S_OBJS = $(S_OBJSCOM)
else
#compiled/linked on client:
S_OBJS = $(S_OBJSCOM) readBICfile.o readTables.o timingpars.o \
 calcOverlap.o bcmask.o Tpartition.o shared.o Partition.o \
 checkCTP.o notInCrate.o readCounters.o initCTP.o swtrigger.o \
 scope.o i2ctemp.o  inputsTools.o busyTools.o dumpCTP.o \
 phase.o pfp.o bobr.o ctpshm.o ttcmisubs.o ctpTools.o
# intint.o
# mysqlwrap.o
endif
$(info S_OBJS:$(S_OBJS))
all: $(S_OBJS)
	-rm libctp.a
	ar rs libctp.a *.o

.o: .c 
bobr.o: bobr.c ctplib.h
readCounters.o: readCounters.c ctplib.h
readBICfile.o: readBICfile.c $(VMECFDIR)/ctp/ctp.h
swtrigger.o: swtrigger.c $(VMECFDIR)/ctp_proxy/Tpartition.h
ctpshm.o: ctpshm.c $(VMEBinc)/vmewrap.h $(VMECFDIR)/ctp/ctp.h \
 $(VMECFDIR)/ctp_proxy/Tpartition.h
readTables.o: readTables.c $(VMEBinc)/lexan.h $(VMECFDIR)/ctp_proxy/Tpartition.h
	$(CC) $(CFLAGS) $(MYSQLCFLAGS) -c -o $@ $<
Tpartition.o: Tpartition.c $(VMEBinc)/lexan.h $(VMECFDIR)/ctp_proxy/Tpartition.h
	$(CC) $(CFLAGS) -c -o $@ $<
Partition.o: Partition.c $(VMEBinc)/lexan.h $(VMECFDIR)/ctp_proxy/Tpartition.h
	$(CC) $(CFLAGS) -c -o $@ $<
mysqlwrap.o: mysqlwrap.c
	$(CC) $(MYSQLCFLAGS) -c -g -o $@ $<
clean:
	-rm *.o

