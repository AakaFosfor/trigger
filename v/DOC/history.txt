LTU history (distributed with LTU sw) from March 2009
6.3.
ltu/ADCI.c moved to ADCI.cold
12.3.
VMESITE probably not necessary -makefiles in ltu_proxy/ and vmeblib/
are testing now DATE_INFOLOGGER_DIR env. variable.
12.3.
ltuclient.spec is in ~triad/rpms/SPEC
distrdimclient scripts is now trigger/bin
line:
%define _topdir /home/alice/triad/rpms
added to ltuclient.spec
12.3.-------------------------------------- web release ltu3.4 + ltuclient 2.4
ltuclient v2.4 prepared and released
13.3.
getsgmode() added to ltudimservices (bug -we couldn't start ltu sw if run was
active)
6.5.2009
DATE_INFOLOGGER_DIR=/opt/infoLogger
DATE_DAQLOGBOOK_DIR=/opt/libDAQlogbook
introduced in vmebse.bash. If not defined, corresponding sw is not linked
14.5.
ltu/ltulib/ttcsubs.c: Now waiting 20ms after TTCrxreset (was 9ms). It gives
better info about busy -how it follows NOT_READY signal from TTCrx.
26.5.
vmeb/counters.py
-only 1 instance of counters widget available now!
26.5.
ltu/ltulib/ttcsubs.c
- when reading counters during ttcInit, 'accrual' is not used
  (cannot be used with server when in the same time counters.py
  is using accruals! -even now it is probably wrong becasue
  readCounters() always swaps between 2 buffers -i.e. if between 
  2 'counters widget' readings there is at least 1 read from ttcInit(),
  it rereads/swap buffers!
2.6.2009
ltu_proxy.c: now going to ERROR state in case of bad parameters (before only
error message issued)
19.7.2009
bin/ltuproxy.sh det status added
19.7.2009
RATE_LIMIT now better user interface, + RATE_LIMIT parameter
in ltuttc.cfg started to be used for TPC added
20.7. lab <-> pit now agree
#define LTU_SW_VER "3.5 20.07.2009"   // better RATE_LIMIT
29.7.
-LHCGAPVETO option added (ltu)
21.8.
vme/ltu/ltulib/ttcsubs.c now 2 secs between TTCrxreset and FEEreset
(was 1 second). Seems better -for some QPLL >1 sec necessary
8.9.2009
bug in ltu/ltu.c RATE LIMIT interface fixed (minimum interval is 1640usecs),
8.9.2009
firmware 0xb4:
0xb3 L2_delay is 12 bits -> max. 102,4 us
0xb4 L2_delay 13 bits ->  max. 204,8 us

8.9. -------------------------------------- web release ltu3.5 + ltuclient 2.5
4.11.2009
TTCRX_RESET INIT option added (only load + FEE, without TTCrxreset)
19.11.
Rate limit: bug fixed (Enabled/Disabled button now ok)
19.11.2009
ltu_utils.c Setstdalone() for HMPID now sends FEECMD 12
28.1.2010
vmebse.bash improved (removed the duplication of strings in $*PATH
4.2.2010
ltuclient-2.6-1.i386.rpm prepared
10.2.2010
New dim sevice in ltu_proxy: CMD, with message ttcrxreset or ttcrxregs:
if(strcmp(msg,"ttcrxreset")==0) {
  TTCrxreset(); usleep(10000); TTCrxregs();
  dimlogprt("cmdCMD", "rxreset ok\n");
} else if(strcmp(msg,"ttcrxregs")==0) {
  TTCrxregs();
  dimlogprt("cmdCMD", "rxregs ok\n");
}
11.2.
SSM control for LTU: StartAfter+TTCrxreset button added (ltulib/ltussm.c
and ltu/ltu_u.py modified)
12.2.2010
bug fixed in vmeblib/timeroutines.c (incorrect DiffSecUsec)

2.3.2010
bug fixed in ltu_proxy: /CMD command ttcrxreset was executed without
opening VME !
2.3.2010
ltudim/cmd1.c -ltu client for ttcrxreset, ttcrxregs commands
20.5.
ltulib/ltuCounters.c
- better measureBusy() now
15.6. --------------------------------------- -> lnxpool31
13.7.2010
ltu_b5.rbf (rate limit update) loaded to cpv (0x811000 in altri1)
19.7.2010
ltu.h
#define LTU_SW_VER "3.8 19.07.2010"   // 0xb5, RATE_LIMIT +3bits
ltu.c RateLimit() modified
20.10.2010
lnxpool20:
adduser -u 505 -g alice -d /home/alice/apixel apixel
.bashrc and v copied to ~apixel/
20.12.
bug in ltulib/ltussm.c fixed
16.5.2011
loadLTUfpga -bug fixed. If .rbf file does not exist, nothing done. Before
fix: old $VMEWORK/FlashMem.cfg link were used.
------------------- 2.12.2011
trigger@pcalicebhm10:vmebltu.tar created
12.1.2012
ltu.c: test of TEMP_STATUS.CRCerror bit when LTU software starts now
arranged for new LTUs (serial number >=64).
Warning suggesting the LTU reconfiguration issued if bit is ON.

3.2.2012
FLGextorbit introduced. setstdalone.c + others modified.

19.2.2012---------------------- distrib to web ver. 4.0
12.3.2012
ltu/ltu_u.py modified: setstdalonemode(1) (was ...()).
15.5.2012
SYNC added (smi command executing sync )
23.5.2012
ltuclient-2.9-1.x86_64.rpm prepared (see DOC/ltu_distrib) -older version
does not communicate correctly with server (Counters read)

9.4.2013
ltu/ltu.c  serial#:0 this LTU is accounted version 2 (i.e. not scratched yet)
see also CTPhistory: (cmdbase.c, vmewrap.c also 64 bits now ok, not tested
thoroughly).
17.4.2013
vme/CFG/ltu/SLM/L2a.seq,slm,...          -here are standard .seq/slm files
vme/CFG/ltu/SLMproxy/L2async.seq,slm,...  placed
17.4.2013
vmeb/myw.py: if ltuclient: $VMEWORKDIR/WORK created if not existing before
vme/ltudim/ltuclient.spec added (copied into ~/rpms/SPECS before .rpm built)
26.4.
v/SPECS directory now for spec files (ltusw binary rpm and ltuclient
src+bin rpms now available)
7.6.
vmeb/caenvme.setup vmeb/vmeblib/vmewrap.c bin/startClients.bash
copied from alitoftm00 (64bits PC). Still to be updated later (Pietro).
20.6.2013
spec for ltusw changed (AutoReq: no) -i.e. no dependency on .so libraries now
5.7.2013
TSI148: VME driver for the single-board
computer Fastwel CPC600 with the VME bridge Tundra Tsi148
8.11.2013
checkSEU() added in Simple  tests menu
2.12.2013
ltu_proxy: daqlogbook_update_LTUConfig() call
todo: 
1. replace it by DIM call (like com2daq in ctplib/ttcmisubs.c)
   i.e. NO daqlogbook usage on VME comps (infoLogger is using mysql libs anyhow)
2. abandon idea of (1.), and arrange daqlogbook+mysql linking on VME comps
   (as it was during run1)
3.11.
option 1. done, i.e.:
daqlogbook access from pydim/server.c. ltu_proxy uses ltucfg2daq().
Possible problem: 
for private lab setup, pydim server is not available -i.e.
I keep also original option commented in case it is needed.
11.12.2013
ltu/slmcmp.py slmcomp.py: modified for 100 classes (-run1 argument if
old way 50 classes needed)
18.12.2013
slmcmp.py, slmcomp.py, ltulib/ltuslm.c: using 32 bit words (2x bigger slm),
L2 data placed in bits 31..16
Todo: Error message when attempt to load 16 bits .seq file
7.1.2014
32 bits SLM memory, text editor invoked for .slm and .seq (with
different help)
13.1.oltu_u.py:
if (type(f2save)==types.StringType) or (type(f2save)==types.UnicodeType):
i.e. tkFileDialog returns UnicodeType (before 2.6 seems it was StringType)
14.1.
slmc[o]mp.py: Warning issued now, when L2class pattern is not a subset
of L1 classes
16.1.
checkSEU() added in ltu_proxy.c. See also devdbg/seu
ltusw-5.0 published on web
1.4.2014
ltu_u.py: CTP emulator allows automatic break execution when emulation active
2.4.
ltu_proxy/printcounters.c -print LTU counters to stdout (vme access)
28.4.2014
ltuproxy.sh -gives better error in case DIM_DNS_NODE not available
17.6.
LTU2, fpga ver<0xb8: SEU bit not checked
19.6.
lu/ltu_u.py: before calling SSMANA/ssmanls... chdir to WORKDIR added:
        os.chdir(os.environ['VMEWORKDIR'])
25.7.
0xb9 (ltu+ltu2) -longer fifos
24.8.
5.3 version of ltusw prepared for lnxpool33-disk (see
mails/virtualmm/lnxpool33). to be redone and put on web
28.8
cern.ch/juskoa/ltu modified -0xb9 is included in .tar.gz file and
possible to download from the page
22.9.2014
ltudimservices.c changed: "TTCinit()" checked (before: "TTCinit(" -
this caused ltuproxy crash in case DIM DO command send without NL)
9.10.
ltu counters: read once per sec, shared for all DIM clients (see CTPhistory)
