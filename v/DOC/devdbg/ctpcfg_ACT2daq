2 goals (A and B): 
A: save ACT instance name/ver for each CTP config file
------------------------------------------------------
Current status:
--------------
act_name/ver updated in DAQlogbook for .partition config only using:
DAQlogbook_insert_ACTConfig() from wrapper daqlogbook_update_ACTConfig()
in vmeblib/daqlogbook.c

Usage/examples:
--------------
1.
bin/getact.bash -> ctp_proxy/main_act.c  (linux/act.exe)
-> actdb_getdbfiles() in vmeblib/actdb.c

err=ACT_getActiveItem(handle,partitionCtpConfigItem, &instance);

2. pydim/act_main.c -print all instances using ACT_getItem()

Modifications needed:
---------------------
1.
vmeblib/actdb.c
actdb_getdbfile() -returns now also ACT name,version DONE

2. pydim/act_main.c -print all instances using ACT_getItem()
   - modify for /part PHYSICS_1/CTP filter/SPD

3.
actdb_getdbfiles() will create list of ACT name/ver like:
ctp.cfg pp11 v2
L0.INPUTS ppPbPb11 7
...
-this list can be used for DAQ update by pydim when partition loaded
 when calling daqlogbook_update_ACTConfig() from pydim/server.
Note: probably better: 
- 1 file .actinst, with the same date when file downloaded, or
- consult ACT directly in time of SOR (problem: how to detect file change after
its downlaod from ACT)?.

B. simplify filter mechanism
----------------------------
Todo: only 1 set of noV0, noT0,... 
Now: the filter present in /CTP/filter is valid only for PHYSICS_1 !

Todo: 
- one for each partition (defined in: /part PHYSICS_?/CTP filter/ ) ? 
- should the default one (/CTP/filter) be taken if not defined for partition?

Let's continue with current policy, i.e., default filter
valid just for PHYSICS_1. Later we can widen it for all partitions.
run1:
actdb.c actdb_getPartition() -returns always filterpar:"", because
filter was not defined for particular partitions

parted.py: -> TrgClass.applyClassFilter(filter)
              trigdb.TrgFilter()
seems ACT calls script: getact.bash. All we need to do is to modify:

New items in ACT:
/CTP/trgInput_ACORDE with instances=values ON, OFF
/CTP/trgInput_SPD
...

ctp_proxy/main_act.c   -new parameter "FILTER", going over 
  all "CTP/trgInput_*" items, returning only list of disabled detectors
done: 27.2.2014  (new ctplib/actdbctp.c created for ctp-like act accesses)

TRG_DBED/parted.py uses:
- trigdb.TrgFilter.isExcluded(ltuname) -reading $dbctp/filter

actdb.c actdb_getPartition(), now in ctplib/actdbctp.c -should 
  read trgInput_* items instead of filter item and create 
  filter file accordingly. done: 3.3.2014

status 3.3.2014: should be ok -i.e. 'filter' file is created the same
(as it was in run1), now using /CTP/trgInput_LTUNAME instances in ACT

---------- 12.6.2015: flexible act (see also todolist)
goal: allow ACT change even during run, at least for:
filter -already done (i.e. filter can be applied during the time when partition is active):
  - i.e:
  actdb_getPartition() ctplib/actdbctp.c
    void actdb_getff(char *filter, int actopcls)  -as file+variable

VALID.DESCRIPTORS, aliases.txt
-> actdb_getdbfile()
FillingScheme
VALID.BCMASKS
Now (old way):
1. reconfig ctp -> ctpproxy.py actrestart
     ctpproxy STOP
     ctp_proxy/linux_s/act.exe  -downloading files from ACT
     CTPRCFG/RCFG intupdate aliasesupdate
     ctpproxy START
     if FillingScheme==bcmasks:
        colschedule.bash update 
     else:
        getfsdip.main("act")     -this not needed here!
2. pydimserver.py in time of ctpproxy [re]start:
- reload parted (i.e. after files downloaded from ACT)
   
New (flexible) way:
1. leave ctpproxy.py to be called only for: ctp.cfg ctpinputs.cfg -only
   these 2 files should be left in actdb_getdbfiles() or all?
2. check if ctpproxy at START_PARTITION contacts pydimserver:
   NO -i.e. after INIT_PARTITION, pydimserver is done!
3. add to actdb_getff(): i.e with each INIT_PARTITION
   - ACT->local file copy (perhaps inteligent i.e. if not changed, no download?) of:
     VALID.DESCRIPTORS
     FillingScheme, VALID.BCMASKS+colschedule.bash update -only if bcmask!
4. pydimserver.py:
   reload parted; with each rcfg request (if file changed).

List to Vasco (sent 17.6.):
Hi Vasco and Franco,
1st group (i.e. we need to stop all partitions if we want to load new
version):
VALID.LTUS,ttcparts.cfg,ctp.cfg,ctpinputs.cfg.

2nd group: all the others (VALID.DESCRIPTORS, VALID.BCMASKS, FillingScheme)
-i.e. if a run is active, it will finish with old config version, 
valid in time when the run was started. 
New runs will use fresh configs (i.e.  ACT would be consulted
always in the time of INIT_PARTITION).
Note: /CTP/filter items are already done this way (i.e. we do not need
to reconfigure ctpproxy after filter change -it just becomes valid with
the next run).

I did not implement changes yet. When I have it ready (I think
it should work with current ACT -just 'ctp reconfig request' will
be useless for 2nd group), I let you know (seems to me not sooner than
in second half of July).
Here are remaining points to be done after:

    1. ACT change: 2 groups: CTP_restart and CTP_not_restart
    2. validate improvements:
       A. add names to stdout+validate.log (with '*' for effectively 
          filtered out
       B. use working directory (not /tmp)
       C. DAQlogbook_update_triggerConfig API change: + bitmask
          of effectively disabled trg. detectors (called from pydim/server)
    3. move filter from CTP_ to partition area in ACT (i.e. separate 
       filter for each partition) 
    4. implement validate as 'service' (not rpm)


