6.4.2005
vme/VME2FPGA/  -modified according to CTP boards (works for LTU too)
vme/fo/fo.c.template - empty template for other CTP boards
6.4.2005
vme/CTPcommon -common subroutines (calling vmxopen(*vsp,...)) for
    CTP boards
10.4.2005
    vmxopen(&vsp,   -now if *vsp==-1, the search for vmespace is done
and found vsp is returned in vsp
   
May
- vme/ssmint -common SSM interface
- vme/fo vme/busy  -prepared for fo, busy boards
- MORELTUS/findboards.c -find boards

Sept.
v/vme/ctp -all the ctp boards accessed through 1 vme space.
  (see ReadTemperatures(), TestLEDS())

vmecrate ctp:
- Classes (canvas)
- shared resources
- Test class (similarly to LTU.busy set/check)
- File: savefile/readfile/reeadhw/writehw

SSM processing:
--------------
Interfacing C-calls with python will keep SSM contents and
hide the shift of bits among analysed SSM.
readSSM(ssm)   -reads SSM
writeSSM(ssm)  -write SSM
syncSSM(ssm1, ssm2,...) -ssm1 recording started first. Find out
                first common Orbit
getSSM(ssm, bit, frombit, bits) returns bit numbers when
                the signal level changed + level (0 or 1):
0 0    -signal strats with level 0
20 1   -from bit 20 signal level is 1
34 0   -from bit 34 signal level is 0
...

frombit:  -> 0 is first Orbit for all the synced SSMs.
bits:     -> number of bits to be returned

Python widgets: through canvas 1 row for 1 signal:

board1 signal1 1111100111111...
board2 signal2 1111100111111...
....
- posibility to squeeze in lines but in columns too

6.12.2005
ctpt -there is link: ctpt.c -> ../ctp/ctp.c and SSMCONNECTIONS
      varibale defined for conditional compilation
ADCI copied back form ~trigtest/vold/vme/ADCI to ~aj/v/vme/

10.4.2006
v/vme/busy updated from ~rl/v/vme/busy (busy orbit scan added).
Old busy/ left in ~aj/busy10apr2006.tgz

ssmbrowser.py: 
Fixed: when board changed, corresponding signal names (hidden
in signal button) did not changed. Now OK

11.4.2006
FO/Cluster widget: the lower part is 'read only'. 
                   (see online help)
Always, when FO board programmed, the BUSY board is updated too -
updateBusyClust is called from setFO()

26.4.2006
- ctpcfg.py -Classes widget now OK (myw.compwidg added)
- ssmbrowser corrected (Addnew signal did not add 'bit' button)
27.4.2006
- ssmbrowser.py -files name when avin/restoring signals
- ctpcfg.py -now L1_CONDITION and L2_CONDITION word updated correctly
  with the change of cluster
8.5.2006
counters.py: fo* counters incorrect, now OK
9.5.2006
ctpcfg.py: incorrect processing of BUSY line from .cfg file. Now OK.
10.5.
ctpcfg.py: All/Rare flag not written into HW. Now OK
18.5.
conters.py: clear counters on all boards, l1srobeIN on L2 board now OK
            BUSY_DISB_CTP_BUSY added in initmain()
12.7.
Test class gui -L1,2 boards added (roc, calflag on FO not set in TestClass
window, but in FOs/Clusters window)
17.8 2006
- ctpcfg.py: modL0handler: event.keycode retruns ?? in SLC4 !!!
             now OK for modL0handler (to be corrected everywhere...)

24.8.
-Kanvas.doEntry now in myw.py
-improvement in help for Kanvas (l0pr-Entry now  hiddden to allow
 help if it is over it)
17.9.
- afetr 'periodic read' stops by itself (100 secs), the color of
  button now OK
- multi-column format in VMEcounters
18.9. TCluByOut now ok, byin1-24 now OK (were shifted by 1)
17.10.
- Now FOs/cluster window: there is button resolving BUSY inputs
  according to ctp/ctplib/readTables.c (i.e. the same table
  used in ctp-proxy as in ctp exp. sw.)
18.10.2006 vmeb/vmeblib introduced (commmon library for ctp_proxy,ctp,ltu,ttcvi)
19.10.
swtrigger.c moved to ctplib. Sw trigger generation:
1. setswtrig    (doesn't set FOs !, only L0,1,2,INT are set)
2. startswtrig() -as many times as necessary
   GenSwtrig() -combines setswtrig, startswtrig
1.11.2006
ctp/ctpcounters.py: NCOUNTERS=... +2  (epoch secs and epoch_micsecs)
7.11.2006
- ctp.h, ctplib/checkCTP.c -check for right FPGA version of
     CTP boards now always when ctp.exe started
- initCTP.c -scope outputs connected to INT board/GND
10.11.
- ttcit. Master copy is on trigger@altri2. Copy it from there
  always before ajupdate + updaltri2 to aj@altri1:
  I.e. on aj@altri1:
  cd ~aj/v/vme ; rsync trigger@altri2:v/vme/ttcit .
20.11.
- Detector2Connector() moved from ctp_proxy.c to ctp/ctplib/readTables.c
- BUSY and FO boards are now programmed in setswtrig(), they are not
  programmed from now in ctp_proxy.c, generateXOD() -look for 20112006 -
  useless part still to be removed
- scope routines moved from ctp.c to ctplib/scope.c
- testclass.py (old approach, not used more, is in testclassLowLevel.py)
  -usage of standard way for SW triggers: setswtrig/startswtrig or
   GenSwtrg()
24.11.
- counters.py: now: ./counters.py printnames >cnames
  creates the list of all CTP counters (CGT  for rrdtool included).
10.01.2007
INT2 button in Shared resources window now OK (before it showed
in its submenu INT1, right should by INT2).
29.1.
vmeb/counters.py correct now:
      numberofcounters=NCOUNTERS   (was incorrect NLTUCOUNTERS)
31.1.
i2creadall() added into ctp.c
9.2.
ctplib/i2ctemp.c -new
getCounters() -returns 725 lines (was 727)
NCOUNTERS changed: now 750 (+l2orbit + tem/volts for each CTP board)
dimservices.c -l2orbit read directly here, unix time now read
               before counters are read (before unix time was read
               after counters read into memory)
17.2.
- ctplib/loadFPGA.c moved (and slightly modified) to vmeblib/loadFPGA.c
  now loadFPGA() serves LTU/CTP/LVDST boards
18.2.
dimcdistrib on pcalicebhm05 modified (server.c added)
ctp_proxy/dimc now executes 'g'=GETCOUNTERS='forced counters reading'
25.2.
ctplib/mysqlwrap.c  -routines accessing MySQL
ctplib/readTables.c -use MySQL DB by defining TRGDBmysql
26.2.
Discussion with Sylvain:
see: aj@pcalicebhm05:libDAQlogbook/
Relation between cluster and corresponding readout-detecotrs needed by DAQ.
Sylvain will provide routine (in static library or source) to be called
from ctp_proxy at the time of the Partition start, when partition load 
was successfull:
clust2detectors(int RunNumber, 
int Cluster,     // physical cluster number (1-6) (bits in L2a message)
w32 DetMask,     // detector mask (24 bits) of detectors in this cluster
char *partition  // partition name wih this run
);

18.3.
ctplib/readCounters.c now conforms with ltulib/ltuCounters.c
23.3.
- readCounters(,,) call corrected in ctp_proxy/dimservices
- ctp_proxy/dims.c -SIGBUS catching in gotsignal() seems to be correct
  now (VME bus errors do not kill dims process).
29.3.
added: v/libDAQlogbook      -.h and .a from Sylvain 
ctp_proxy: DAQlogbook added (see updateDAQClusters() )
31.3.
-ctp/txtproc.py:
 - varsInExpr() added
 - moved to vmeb/txtproc.py  (used in parted.py from now too)
-parted.py improved:
 - description of .pcfg file in v/vme/ctp_proxy/readme
 - it processes CTP inputs now
 - it processes l0fun*  (used l0fun* stored in .pcfg file)
 - unconnected CTP input is defined by inp_name=0 in VALID.CTPINPUTS
19.4.
FO1 board has dial 1 (before it was 0). Modifications:
  - ctp.h : dials for FOs in ctpboards table
  - ctplib/readBICfile.c :    '0') -> '0')-1     i.e.
           nctp= FO1BOARD + (line[7]-'0');  changed to:
           nctp= FO1BOARD + (line[7]-'0')-1;
    ctp seems OK, but not tested with ctp_proxy software 
22.4.2007
- ctplib/timingpars.c modified: calcINT_BCOFFSET, calcL2_DELAY_L1 and
  added some comments
- initCTP.c now uses timingpars.c now (checked for usage in ctp, ctp/ctplib
  ctp_proxy directories).
  not yet done: PF protection calculation
  The change in hw CTP settings is now:
TL1:212   TL2:3472   TBCL0 (L0 BC_offset):173   PFdt:440
                   value after 22.4.      value before 22.4.2007
L1_DELAY_L0:         158 = 0x      9e                    160
L2_DELAY_L1:        3205 = 0x     c85                   3260
BUSY_L0L1DEADTIME:   211 = 0x      d3                    213
FO_DELAY_L1CLST:     403 = 0x     193                    412
L2_BCOFFSET:          82 = 0x      52       not set, hwdef:0
INT_BCOFFSET:         175 = 0x     af      not set, hwdef:0

- ctpcfg.py: class PFwholecircuit added, aiming to give
  user inteface for conversion between PF half-delay and hw settings
  in PFboard objects -to be finished
23.4.2007:
Inventory of INT boards:
INT 4 is in altri1
INT 0 is in altri2   +another 2 boards (ser. # 0) are in the cupboard)
INT 1 is in epmp3
6.5.2007
ctpcfg.py, myw.py -improved behaviour of shared resources/PFS,
    - automatic PFs values calculation from PF interval
     -bad coloring fixed (now modified fields should be colored)
8.5.2007
In ctp.h: #define CTP_SW_VER "1.0 8.5.2007"
13.5.
VMEWORKDIR -done for ltu (not for ctp sw yet)
3.6.2007
ctp_proxy/dimservices.c modified: MCclients structure keeps info now
correctly about the connected clients
5.6. ---------> pit.tgz
12.6.
l0/1/2 -fpga upgraded (all: ADC now ok, L0: softLEDS)
3.7.2007
CFG/ctp/DB/VALID.CTPINPUTS format changed!
9.7.
ctp.c: i2creadall -conditional compilation CERNLAB/CAVERN.
10.7.
ltu voltages added to CTP counters. Modified:
ctp.h, ctpcounters.h
dimcdistrib/readme, cnames.sorted2, ctpcounters.h
DOC/CTPreadme
ctp/ctp.c, ctplib/readCounters.c
web:
/var/www.html/CNTWEB/cnames.sorted2
 cnt.py  -just ltu added in BL012I variable
 ...
12.7.
CERNLAB_SETUP and CAVERN_SETUP used now in ctp, ctp/ctplib
(i2c addresing for CTP boards is different).
There is VALID.LTUS.pit file -valid in the pit (similarly
for other files in vme/ctp/DB)
13.7.
i2cchan and i2cbran introduced in VALID.LTUS. readTables.c modified
(only for FILES -still to be done for MysqlDB). i2cchan/i2cbran are
now used in ctplib/i2ctemp.c, i.e. 24 LTU I2C voltages are
in the order of DAQ/ECS numbering of detectors (0 if i2c not connected).
13.7.
See aj@pcalicebhm05:EXAMPS/mysql for MySQL client (.py .c) examples 
and ctp/ctplib/mysqlwrap.c
25.7.
SOFTLEDS added for scope signals (including STartAll button).
Not yet done in FPGA.
26.8.2007
v/vme/fanio/dim server and client: user interface for FANINs
28.8.
load2HW(), ctp_proxy.generateXOD: similar modification as at 19.4.2007 
See ctplib/swtrigger.c: setswtrig(): 
                vmeaddr= FO_CLUSTER+BSP...
too.
28.8.
CTP files:
$VMEWORKDIR/CFG/ctp/DB      -hw definitions
$VMEWORKDIR/CFG/ctp/pardefs -partition definitions
(i.e. pardefs moved from ctp_proxy/database to CFG/ctp/pardefs
Starting ctp_proxy:
cd $VMEWORKDIR ; $VMECFDIR/ctp_proxy/linux/ctp_proxy
cd $VMEWORKDIR ; $VMECFDIR/ctp_proxy/linux/test
28.8
ctp_proxy: LTU counters read only if LTU in the CTP crate.
           To be finished: reading these counters thorugh LTUDIM service
30.8.
- vmeb/counters.py modified (now correct FO* name in counters menu)
- ctp/ltu -> mcopied to the pit in vnew directory
31.8. (in aj@altri1 and in vnew/... in the pit)
bug in swtrigger.c fixed (roc bits were not set properly for SOD/EOD)
12.9.
- ctp_proxy.c generateXOD() modified:
  now waiting 6x 100 milisecs before EOD generation abandoned.
  To be improved: after some time a
27.9.
- ctp.c, ctp.h, ctplib/scope.c, nnis1nn() added. Goal:
From now, some common addresses with address 0xnn becomes 0x4nn. This
will be done step by step for all the CTP boards. 1st one is BUSY board
(from version A3). See how TEST_ADD address is treated for example.
-SOFTLEDS for ctp finished (busy board should work)
- busy board A3 loaded in bhamlab, new vme addresses included, scope
  signals, counters to be added
28.7.
New BUSY counters added to CTP counters (160 busy slots instead of 48). 
Modified:
ctpcounters.h
counters.py
~aj/dimcdistrib: readme, cnames.sorted2, ctpcounters.h
DOC/CTPreadme -here is the guide how to create cnames.sorted2
ctplib/readCounters.c -only comment (48->160)
web: not done yet
/var/www.html/CNTWEB/cnames.sorted2
 cnt.py  -just ltu added in BL012I variable
 ...
24.10.
TRG_DBED moved to v/vme/
trigdb.py -imported into parted.py and vmeb/counters.py. Now TrgLTU,VALID.LTUS
           only processed, in future another objects to be moved from
           parted.py to trigdb.py
25.10.
http://pcalicebhm05.cern.ch/CNTWEB/cnt/
and CTPDIM server on altri1 now works with new scheme: 886 counters
- see CTPreadme
2.11.
ltu/ctp/CNTWEB/.ctp.rbf     -copied to the pit
2.11.
bug fixed in ctplib/findLTUdaqdet() and vmeb/trigdb.py
29.11.
ctp/ctplib/makefile     CERNLAB_SETUP (not CERN_SETUP for cerlab setup!)
5.12.
ctp_proxy: VALID.CTPINPUTS read now in readTables.c and used
in DAQlogbook. NOT TESTED yet.
9.12.
parted: allrare flag is now set correctly in .pcfg file
DAQlogbook update tested, seems OK
18.1.2008
ctpcfg.py: Now, FOs/Cluster menu gives in bottom part (busy inputs)
the name of connected LTU (or just BUS input number, if this input
is not connected)
18.1.
rate now possible for BC/RND generators in 'Shared resources'
menu in hz khz mhz or period in s ms us
19.1.
parted.py:
Version: 'number'    line added in .partition file
Cluster names added (each cluster now consists of 3 lines)
7.2.
started with modifications for .rcfg file:
parted.py partName r   ->creates 'virtual' $VMEWORKDIR/WORK/r1234.rcfg
file.
Virtual= hw class/cluster numbers are the same as logical
11.2.
bug (detector could not belong to more than 1 cluster) fixed
14.2.
New versin of L0 board: A5. Support for SW leds, random filter.
Note:
TEST_LED is 0x1c0 on BUSY board, while on all the other boards it is
just 0xc0.
SWLEDS is supported now on BUSY + L0 board.
14.12.
CNTWEB/cnt.py
deselect button removed, deseletAll() called always (only
choosen counters should appear now) -to be done in ltus.py too, if OK.
Done in the pit too.
19.2.
ctplib/readTables.c - i2cbranch incorrectly read, now OK
19.2.
MaskedDetectors in ctp_proxy addFO2HW incorrectly used. Now ok
24.2.
CNTWEB: deselectALL() -done everywhere (pit,lab, cnt.py ltus.py)
27.2.
CFG/ctp/ssmsigs/busy_inmon.sig fixed (pit+altri1)
28.2.
parted.py: bug fixed: bad creation of TrgInpDet (each TrgInpDet object
contained all inputs)
1.3.
parted.py -modified according to Cvetan request (NONE for BCMASKS, PFS in
lists and in particular classes {NONE}
3.3.
htmlCtpBusy.py -order of detectors (in header) changed (.png were not in right
order)
parted.py, pydim/pydimserver.py, ctp_proxy.c -modified, .rcfg files
should be removed now, after unsuccessful SOD
13.3. pit -> altri1 aj/trigger
14.3.
ctp/scopeab.py modified: L0/1/2 FO INT scope sigs
ctp/ctp.h I2C_ADCWR modified (before: 0xc15c  now, from A5 version: 0xc174)
14.3.
BUSY_CTPDEADTIME in initCTP.c changed to 60 (was 52)
27.3.
pydim/pydimserver.py:
- copy .rcfg file to ~trigger@alidcsvme001:v/vme/WORK/RCFG
ctp_proxy.c:
 1. setALLDAQBusy(); line moved below updateDAQClusters(part);
    (i.e. all partitions active during DAQlogbook update)
 2. updateDAQClusters() modified:
    DAQlogbook_update_triggerConfig(part->run_number, mem);
4.4.
ctp_proxy.c:
Run %d: CTP DDL link full when SOD sent. INT_DDL_EMU:0x%x
4.4.
if updateDAQlogbook fails, partition is not loaded!
16.5.
ROIP_BUSY set to 1 in initCTP.c
17.5.
cfg2part.c: better ERROR message when attempt made to load
partition with > 50 classes
18.5.
parted.py improved:
- test for 50 classes
- better .rcfg creation (before bugs with opt. inputs)
- masking implemented for .rcfg file
18.5.
Bug fixed in ctp_proxy: see ULL1 (before 32bit 1 was used, now 64 bits).
See ctp_proxy0805182004.log how bug was found.
20.5.
copy pit->triad@altri1. From now, all modifications done first
in triad@altri1. before implemented in the pit.
CNTRRD, dimcdistrib -moved from HOME to v/vme (to be fixed for this place) -
see startClients.bash
25.5.
ctpcfg.py -All/Rare better helps. BC*/RND* are now OK (before problem
with hexa numbers)
26.5.
Files: history.txt, CTPhistory.txt, Installation, readme, CTPreadme
are moved from this directory
to altri1:/usr/local/trigger/v/DOC/
26.5.
ctp_proxy.c:
bit17 for all the active clusters in DAQlogbook set when
CTPreadout is active.
26.5.
VME2FPGA.c modified -it takes .rbf files from $VMECFDIR/CFG/...
busy board upgraded to a5 version.
trigger/bin/loadCTPfpga.bash should be used for CTP fpga reload.
CFG/board/readme file should be modified, to keep track of changes
in .rbf files
2.6.2008 triad (not pit)
TRG_DBED/parted.py modified.
.pcfg .partition files are saved in PCFG directory in the time of
creation RCFG/.rcfg file
3.6. triad
ctp_proxy.c
Now: if((intddlemu&0x70)!=0x30) {
Before:if((intddlemu&0x70)!=0) {   (incorrect 'DDL link full error message')
3.6. triad
- 'vmecrate ctp' now initializes all the classes to red color (not choosen)
- DAQ off automatically (DCAVERN_SETUP used) if not in cavern
6.6.
improved: BCmasks (red <->green)
          manual alignment of rare triggers possible with 'SSMcontrol'
11.6.
parted.py: import shutil added (did not work before, now PCFG filled too)
12.6.
linkPartition.bash improved (pit.triad)
12.6.
88usecs -> 100usecs (as requested by TPC). Modified in traid and pit:
ctplib/timingpars.c
ltulib/ltuinit.c
12.6.
on jusko1@pcalicebhm05 (wee need afs + 32 bit machine) compile/link
in ~/rf2ttc directory
on alidcscom026:
cdult ; cd ../../lib/modules/daq
[root@alidcscom026 daq]# mv ~trigger/rf2ttcscope_atlice ~trigger/rfrxscope_atlice .
[root@alidcscom026 daq]# mv ~trigger/librcc_time_stamp.so .
13.6. triad/pit
ctp_proxy.c: getruncfgname() bug fixed (bad name returned)
vmeblib/detectfile.c  -fopen/fclose called in addition to fstat
14.6.
.rcfg file copied now, in addition to NFS, through scp too
15.6.
vmeblib/timeroutines.c till now, time was 1 minute behind system time
now OK
15.6.
scp is now used to copy .rcfg file for updateDAQCluster()
from alidcscom026
parted.py,pydimserver.py improved 
17.6. pnly on triad (see scripts/triad2pit)
ctplib/timingpars.c, ltuinit.c -timing changed
27.6.
ctp_proxy.c cfg2part.c: 
partition was loaded in spite of wrong input defined (not used).
Now: partition is not loaded, error reported in infolog
4.7.
ctp_proxy.c:
LOG_FATAL (WAS INFO) if DDL full in the time of SOD
7.7.
dimcdistrib/allrare_client.c + allrare.make released (sent to Roberto)
8.7.
ctp_proxy.c, Tpartition.h   L0/L1 printed in addition at EOD (before only L2a)
14.7.
l0f* are OK now with part. editor. See ctp_proxy/readme 
Problem to be fixed (before python upgrade in the pit):
python 2.3.4.: ctp ok, but with 2.4.3. (on bhamtp) it does not work due to
using tkinter functions before mainloop() called! 
14.7.
BUSY_OVERLAP (ctplib/calcOverlap.c) added (ctp_proxy + ctp software) -to be used
always with BUSY_CLUSTER[] modification.
14.7.
ttcmi (alidcsvme017) boards should be setup after reboot from rc.local now 
17.7.
BUSY_ORBIT_SELECT=0 (initCTP.c) -external orbit is used now
19.7.
xcountersStart/Stop: provision made for 'quiet time' when counters
read by ctpdims at the SOR/EOR
usePartition: counters of this are printed to LOG (like at the end of run)
22.7.
Upgrade of all CTP+LTU boards -better clock (compensated) on backplane.
LTU synchronisation done for all LTUs.
22.7.
parted.py: INTERACTIONS version now given in .rcfg file (done in initCTP.c
proxy part sending 4 hexa numbers in addition in 1 line with
clusters/classes...)
22.7.
TRIGGER.PFS is meaningfull (not yet loaded by parted and ctp_proxy)
17.8.2008 -triad+pit
ctp/ssmcontrol.py corrected: condstopSSM() has now 4 parameters
(4th parameter was missing).
17.8.2008 -pit
inputs/inputs.c -scp+rm used to move .dmp files in inputsSMAQ()
to alidcscom027:SMAQ/data/
17.8.2008 -pit+triad
pydim/pydimserver.py -new command included: smaqmv filename
-moves filename in alidcsvme001:v/vme/WORK/ to alidcscom027:SMAQ/data/

See file CTPhistory.txt ...
